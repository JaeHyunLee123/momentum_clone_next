// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String @id @default(cuid())
  userName String @unique
  password String

  friends     Friendship[] @relation("UserFriends") // Users who are friends (this user is the requester or befriender)
  befrienders Friendship[] @relation("BefrienderFriends") // Users who are friends (this user is the recipient or befriended)

  todos Todo[]

  studyTimes StudyTime[]

  friendRequests FriendRequest[] @relation("FriendRequests")
  friendReceives FriendRequest[] @relation("FriendReceives")
}

enum Status {
  ACCEPT
  DENY
  WAITING
}

model FriendRequest {
  requester   User   @relation("FriendRequests", fields: [requesterId], references: [id])
  requesterId String

  receiver   User   @relation("FriendReceives", fields: [receiverId], references: [id])
  receiverId String

  status Status @default(WAITING)

  @@id([requesterId, receiverId])
}

model Friendship {
  // User who initiated the friendship or the first part of the pair
  user   User   @relation("UserFriends", fields: [userId], references: [id])
  userId String

  // User who accepted the friendship or the second part of the pair
  befriender   User   @relation("BefrienderFriends", fields: [befrienderId], references: [id])
  befrienderId String

  @@id([userId, befrienderId])
}

model Todo {
  id String @id @default(cuid())

  todo   String  @db.Char(200)
  isDone Boolean @default(false)

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model StudyTime {
  id String @id @default(cuid())

  studyTime Int //second
  studyDate DateTime

  user   User   @relation(fields: [userId], references: [id])
  userId String
}
